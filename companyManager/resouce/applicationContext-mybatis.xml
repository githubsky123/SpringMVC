<?xml version="1.0" encoding="UTF-8"?>  
    <beans xmlns="http://www.springframework.org/schema/beans"  
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
            xmlns:aop="http://www.springframework.org/schema/aop"  
            xmlns:p="http://www.springframework.org/schema/p"  
            xmlns:tx="http://www.springframework.org/schema/tx"  
            xmlns:context="http://www.springframework.org/schema/context"  
            xsi:schemaLocation="   
                http://www.springframework.org/schema/beans 
                http://www.springframework.org/schema/beans/spring-beans-2.5.xsd   
                http://www.springframework.org/schema/aop 
                http://www.springframework.org/schema/aop/spring-aop-2.5.xsd   
                http://www.springframework.org/schema/tx 
                http://www.springframework.org/schema/tx/spring-tx-2.5.xsd 
                http://www.springframework.org/schema/context 
                http://www.springframework.org/schema/context/spring-context-2.5.xsd">  
	<!--读取JDBC的配置文件 -->
	<context:property-placeholder location="classpath:jdbc.properties" />

	<!-- JNDI获取数据源（dbcp连接池） singleton单例模式 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" scope="singleton">
		<property name="driverClassName" value="${driverClassName}" />
		<property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
		<!-- 连接池初始化连接数 -->
		<property name="initialSize" value="${initialSize}" />
		<!-- 连接池最大连接数 -->
		<property name="maxActive" value="${maxActive}" />

		<!-- 连接池中最大空闲数 -->
		<property name="maxIdle" value="${maxIdle}" />
		<!-- 连接池中最小空闲数 -->
		<property name="minIdle" value="${minIdle}" />
		<!-- 连接池连接等待时间单位秒 -->
		<property name="maxWait" value="${maxWait}" />
		<!-- 连接池开启连接回收机制 【当前空闲连接数<2&&(当前活动数>最大活动数-3)】 -->
		<property name="removeAbandoned" value="${removeAbandoned}" />
		<!-- 连接池回收连接超时时间 默认300秒 -->
		<property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}" />
		<!-- sql心跳： 保证连接池中连接是真实有效的连接 -->
		<!--连接池提供的校验机制testwhileIdle testOnBorrow testOnReturn validationQuery-select 
			1 -->
		<!-- 开启Evict的定时校验 ，循环校验 -->
		<property name="testWhileIdle" value="true" />
		<!--定义Evict的时间间隔，单位:毫秒，大于0才会开启Evict -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!--在进行borrowObject处理时，会对拿到的连接进行校验 -默认是true 设置成false不校验 -->
		<property name="testOnBorrow" value="false" />
		<!--在进行returnObject处理时，会对返回的连接进行校验 -默认是true 设置成false不校验 -->
		<property name="testOnReturn" value="false" />
		<!-- 校验使用的sql语句，validationQuery，复杂的校验sql会影响 性能 -->
		<property name="validationQuery" value="select 1" />
		<!-- 配置每次校验连接的数量 一般等于maxActive -->
		<property name="numTestsPerEvictionRun" value="${maxActive}" />
	</bean>
	<!-- 事物管理 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 配置myBaitis sqlSessionfactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
	</bean>
	<!--AOP事务管理 -->
<aop:aspectj-autoproxy />
		<aop:config  proxy-target-class="true">  
			<aop:pointcut expression="execution(* *org.slsale.service..*(..))" id="transService"/>
			<aop:advisor pointcut-ref="transService" advice-ref="txAdvice" />
		</aop:config> 
	<!--txAdvice:需要定义事物管理器，进行事务处理 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="hl*" propagation="REQUIRED" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>

	<!-- Mapper接口所在包名，Spring会自动查找其下的Mapper ?useUnicode=true&characterEncoding=UTF-8 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.dao" />
	</bean>

</beans>